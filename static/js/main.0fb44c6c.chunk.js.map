{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","formFieldsApi","value","NewMovie","state","formFields","newMovie","addMovie","props","updateNewMovie","event","index","myEvent","setState","prevState","target","updateFormFieldsValue","prev","newFormField","SendMovie","obj","this","field","htmlFor","type","id","onChange","onClick","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0fb44c6c.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './MovieCard.scss';\r\n\r\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img\r\n          src={imgUrl}\r\n          alt=\"Film logo\"\r\n        />\r\n      </figure>\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img\r\n              src=\"images/imdb-logo.jpeg\"\r\n              alt=\"imdb\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\">{title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {description}\r\n        <br />\r\n        <a href={imdbUrl}>IMDB</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nMovieCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  imdbUrl: PropTypes.string.isRequired,\r\n};\r\n\r\nMovieCard.defaultProps = {\r\n  description: '',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './MoviesList.scss';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\nexport const MoviesList = ({ movies }) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard key={movie.imdbId} {...movie} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      title: PropTypes.string.isRequired,\r\n      description: PropTypes.string,\r\n      imgUrl: PropTypes.string.isRequired,\r\n      imdbUrl: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nMoviesList.defaultProps = {\r\n  movies: [],\r\n};\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\n\nconst formFieldsApi = [\n  {\n    title: 'title',\n    description: 'Title',\n    value: '',\n  },\n  {\n    title: 'description',\n    description: 'description',\n    value: '',\n  },\n  {\n    title: 'imgUrl',\n    description: 'imgUrl',\n    value: '',\n  },\n  {\n    title: 'imdbUrl',\n    description: 'imdbUrl',\n    value: '',\n  },\n  {\n    title: 'imdbId',\n    description: 'imdbId',\n    value: '',\n  },\n];\n\nexport class NewMovie extends Component {\n  state = {\n    formFields: formFieldsApi,\n    newMovie: {},\n    addMovie: this.props.addMovie,\n  };\n\n  updateNewMovie = (event, index, title) => {\n    const myEvent = { ...event };\n\n    this.setState(prevState => (\n      {\n        newMovie: {\n          ...prevState.newMovie,\n          [title]: myEvent.target.value,\n        },\n        formFields: (\n          this.updateFormFieldsValue(prevState.formFields, myEvent, index)\n        ),\n      }\n    ));\n  };\n\n  updateFormFieldsValue = (prev, myEvent, index) => {\n    const newFormField = [...prev];\n\n    newFormField[index].value = myEvent.target.value;\n\n    return newFormField;\n  };\n\n  SendMovie = () => {\n    this.state.addMovie(this.state.newMovie);\n    this.setState(prevState => (\n      /* eslint-disable no-param-reassign */\n      {\n        newMovie: {},\n        formFields: prevState.formFields.map((obj) => {\n          obj.value = '';\n\n          return obj;\n        }),\n      }\n      /* eslint-enable no-param-reassign */\n    ));\n  };\n\n  render() {\n    const { formFields } = this.state;\n\n    return (\n      <form>\n        {\n          formFields.map((field, index) => (\n            <div className=\"movie-form-wrapper\" key={field.title}>\n              <label htmlFor={field.title}>{field.description}</label>\n              <input\n                type=\"text\"\n                className={`movie-form-${field.title} movie-form-item`}\n                id={field.title}\n                value={formFields[index].value}\n                onChange={event => (\n                  this.updateNewMovie(event, index, field.title)\n                )}\n              />\n            </div>\n          ))\n        }\n\n        <button type=\"button\" onClick={this.SendMovie}>Add new movie</button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => (\n      {\n        movies: [\n          ...prevState.movies,\n          movie,\n        ],\n      }\n    ));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}